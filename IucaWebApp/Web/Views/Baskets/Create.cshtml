@model Domain.Entities.Basket
@using Domain.Entities

@{
    ViewData["Title"] = "Create Basket";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="card card-material">
                <div class="card-header text-center">
                    <h1 class="mb-3" style="font-family: 'Roboto', sans-serif;">
                        <i class="material-icons md-48">shopping_cart</i>
                        Создать корзину
                    </h1>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <div class="form-floating mb-3">
                                    <select asp-for="Status" class="form-select" required>
                                        <option value="" disabled selected>Выберите статус</option>
                                        <option value="available">В наличии</option>
                                        <option value="unavailable">Нет в наличии</option>
                                    </select>
                                    <label asp-for="Status">Статус</label>
                                    <span asp-validation-for="Status" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating mb-3">
                                    <input type="number" class="form-control" id="productPrice" placeholder="Цена товара" readonly />
                                    <label for="productPrice">Цена товара</label>
                                </div>
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-md-6">
                                <div class="form-floating mb-3">
                                    <select name="productId" id="productId" class="form-select" required asp-items="@ViewBag.ProductId">
                                        <option value="" disabled selected>Выберите товар</option>
                                    </select>
                                    <label for="productId">Товар</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating mb-3">
                                    <input name="quantity" type="number" min="1" id="quantity" class="form-control" placeholder="1" required value="1" />
                                    <label for="quantity">Количество</label>
                                </div>
                            </div>
                        </div>

                        <div class="row mt-4">
                            <div class="col text-center">
                                <button type="submit" class="btn btn-primary btn-lg shadow-lg">
                                    <i class="material-icons">add</i> Создать
                                </button>
                                <a asp-action="Index" class="btn btn-secondary btn-lg shadow-lg">
                                    <i class="material-icons">close</i> Отмена
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/material-design-icons-iconfont@5.0.1/dist/material-design-icons.min.css" rel="stylesheet">

<style>
    .card-material {
        border-radius: 25px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        background-color: #ffffff;
        overflow: hidden;
        transition: transform 0.3s ease;
    }

        .card-material:hover {
            transform: translateY(-5px);
        }

    .card-header {
        background-color: #1a237e;
        color: white;
        padding: 2rem;
        border-bottom: 4px solid #4556be;
        border-radius: 25px 25px 0 0;
    }

    .custom-input, .custom-select {
        border: 2px solid #e0e0e0;
        border-radius: 15px;
        padding: 1.2rem 1.5rem;
        font-size: 1.1rem;
        transition: all 0.3s ease;
        position: relative;
    }

        .custom-input:focus, .custom-select:focus {
            border-color: #1a237e;
            box-shadow: 0 0 10px rgba(26, 35, 126, 0.3);
            outline: none;
        }

    .form-label {
        position: absolute;
        top: 1.5rem;
        left: 1.5rem;
        font-size: 1rem;
        color: #a0a0a0;
        background-color: white;
        padding: 0 0.3rem;
        transition: all 0.3s ease;
        pointer-events: none;
    }

    .input-group {
        position: relative;
    }

    .custom-input:focus + .form-label,
    .custom-input:not(:placeholder-shown) + .form-label,
    .custom-select:focus + .form-label,
    .custom-select:not([value=""]) + .form-label {
        transform: translateY(-1.5rem) scale(0.8);
        color: #1a237e;
    }

    .btn-primary, .btn-secondary {
        border-radius: 15px;
        padding: 1.2rem 2.5rem;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
    }

        .btn-primary:hover {
            background-color: #1a237e;
            transform: translateY(-3px);
        }

        .btn-secondary:hover {
            background-color: #5a6268;
            transform: translateY(-3px);
        }

    .material-icons {
        vertical-align: middle;
        margin-right: 0.5rem;
        font-size: 1.3rem;
    }

    ::placeholder { /* Chrome, Safari, Edge, Opera */
        color: transparent;
    }

    :-ms-input-placeholder { /* Internet Explorer */
        color: transparent;
    }

    ::-ms-input-placeholder { /* Microsoft Edge */
        color: transparent;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const productDropdown = document.getElementById('productId');
        const quantityInput = document.getElementById('quantity');
        const productPriceInput = document.getElementById('productPrice');

        function updateProductPrice() {
            const productId = productDropdown.value;
            const quantity = quantityInput.value;

            if (productId && quantity) { // Проверяем, что продукт выбран и количество указано
                fetch(`/Baskets/GetProductPrice?productId=${productId}`)
                    .then(response => response.json())
                    .then(data => {
                        const unitPrice = data.price; // Получаем цену за единицу из JSON ответа
                        const totalPrice = unitPrice * quantity; // Рассчитываем общую цену
                        productPriceInput.value = totalPrice.toFixed(2); // Отображаем общую цену, округляем до 2 знаков
                    })
                    .catch(error => {
                        console.error('Ошибка при получении цены товара:', error);
                        productPriceInput.value = 'Ошибка';
                    });
            } else {
                productPriceInput.value = ''; // Очистить цену, если продукт не выбран или количество не указано
            }
        }

        productDropdown.addEventListener('change', updateProductPrice);
        quantityInput.addEventListener('input', updateProductPrice);

        if(productDropdown.value) {
            updateProductPrice();
        }
    });
</script>